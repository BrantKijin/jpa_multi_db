version: "3.9"
services:
  XPRODB:
    image: postgres:latest
    ports:
      - "5501:5432"
    environment:
      POSTGRES_USER: XADMIN
      POSTGRES_PASSWORD: XADMIN
      POSTGRES_DB: XPRODB
      TZ: "Asia/Seoul"
    restart: always
    container_name: XPRODB_postgres
    volumes:
      - xprodb-volume:/var/lib/postgresql/data
      - ./backup/xprodb.sql:/docker-entrypoint-initdb.d/xprodb.sql

  YPRODB:
    image: postgres:latest
    ports:
      - "5502:5432"
    environment:
      POSTGRES_USER: XADMIN
      POSTGRES_PASSWORD: XADMIN
      POSTGRES_DB: YPRODB
      TZ: "Asia/Seoul"
    restart: always
    container_name: YPRODB_postgres
    volumes:
      - yprodb-volume:/var/lib/postgresql/data
      - ./backup/yprodb.sql:/docker-entrypoint-initdb.d/yprodb.sql

  IPRODB:
    image: postgres:latest
    ports:
      - "5503:5432"
    environment:
      POSTGRES_USER: XADMIN
      POSTGRES_PASSWORD: XADMIN
      POSTGRES_DB: IPRODB
      TZ: "Asia/Seoul"
    restart: always
    container_name: IPRODB_postgres
    volumes:
      - iprodb-volume:/var/lib/postgresql/data
      - ./backup/iprodb.sql:/docker-entrypoint-initdb.d/iprodb.sql

  KPRODB:
    image: postgres:latest
    ports:
      - "5504:5432"
    environment:
      POSTGRES_USER: XADMIN
      POSTGRES_PASSWORD: XADMIN
      POSTGRES_DB: KPRODB
      TZ: "Asia/Seoul"
    restart: always
    container_name: KPRODB_postgres
    volumes:
      - kprodb-volume:/var/lib/postgresql/data
      - ./backup/kprodb.sql:/docker-entrypoint-initdb.d/kprodb.sql

  XBIZDB:
    image: postgres:latest
    ports:
      - "5505:5432"
    environment:
      POSTGRES_USER: XADMIN
      POSTGRES_PASSWORD: XADMIN
      POSTGRES_DB: XBIZDB
      TZ: "Asia/Seoul"
    restart: always
    container_name: XBIZDB_postgres
    volumes:
      - xbizdb-volume:/var/lib/postgresql/data
      - ./backup/xbizdb.sql:/docker-entrypoint-initdb.d/xbizdb.sql

volumes:
  xprodb-volume:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Volumes/development/docker/xprodb'
  yprodb-volume:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Volumes/development/docker/yprodb'
  iprodb-volume:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Volumes/development/docker/iprodb'
  kprodb-volume:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Volumes/development/docker/kprodb'
  xbizdb-volume:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Volumes/development/docker/xbizdb'
